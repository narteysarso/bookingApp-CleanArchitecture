/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */





declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AmenityWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  BookWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  PackageWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  RoomWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  UserWhereUniqueInput: { // input type
    email?: string | null; // String
    id?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Amenity: { // root type
    createdAt: any; // DateTime!
    deletedAt?: any | null; // DateTime
    description?: string | null; // String
    id: string; // String!
    name: string; // String!
    updatedAt: any; // DateTime!
  }
  App: { // root type
    createdAt: any; // DateTime!
    deletedAt?: any | null; // DateTime
    id: string; // String!
    isActive: boolean; // Boolean!
    name?: string | null; // String
    token?: string | null; // String
    updatedAt: any; // DateTime!
  }
  AuthPayload: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Book: { // root type
    arrivalTime: any; // DateTime!
    clientEmail?: string | null; // String
    clientName: string; // String!
    clientPhone: string; // String!
    cost: number; // Float!
    createdAt: any; // DateTime!
    deletedAt?: any | null; // DateTime
    depatureTime: any; // DateTime!
    id: string; // String!
    isApproved: boolean; // Boolean!
    updatedAt: any; // DateTime!
  }
  Mutation: {};
  Package: { // root type
    createdAt: any; // DateTime!
    deletedAt?: any | null; // DateTime
    description?: string | null; // String
    id: string; // String!
    name: string; // String!
    price: number; // Float!
    updatedAt: any; // DateTime!
  }
  Query: {};
  Room: { // root type
    createdAt: any; // DateTime!
    deletedAt?: any | null; // DateTime
    description?: string | null; // String
    id: string; // String!
    isBooked: boolean; // Boolean!
    location?: string | null; // String
    name: string; // String!
    price: number; // Float!
    updatedAt: any; // DateTime!
  }
  User: { // root type
    createdAt: any; // DateTime!
    deletedAt?: any | null; // DateTime
    email: string; // String!
    id: string; // String!
    isActive: boolean; // Boolean!
    name: string; // String!
    updatedAt: any; // DateTime!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  AmenityWhereUniqueInput: NexusGenInputs['AmenityWhereUniqueInput'];
  BookWhereUniqueInput: NexusGenInputs['BookWhereUniqueInput'];
  PackageWhereUniqueInput: NexusGenInputs['PackageWhereUniqueInput'];
  RoomWhereUniqueInput: NexusGenInputs['RoomWhereUniqueInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
}

export interface NexusGenFieldTypes {
  Amenity: { // field return type
    app: NexusGenRootTypes['App']; // App!
    author: NexusGenRootTypes['User']; // User!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    description: string | null; // String
    id: string; // String!
    name: string; // String!
    rooms: NexusGenRootTypes['Room'][]; // [Room!]!
    updatedAt: any; // DateTime!
  }
  App: { // field return type
    amenities: NexusGenRootTypes['Amenity'][]; // [Amenity!]!
    books: NexusGenRootTypes['Book'][]; // [Book!]!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // String!
    isActive: boolean; // Boolean!
    name: string | null; // String
    packages: NexusGenRootTypes['Package'][]; // [Package!]!
    rooms: NexusGenRootTypes['Room'][]; // [Room!]!
    token: string | null; // String
    updatedAt: any; // DateTime!
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  AuthPayload: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Book: { // field return type
    app: NexusGenRootTypes['App']; // App!
    arrivalTime: any; // DateTime!
    author: NexusGenRootTypes['User']; // User!
    clientEmail: string | null; // String
    clientName: string; // String!
    clientPhone: string; // String!
    cost: number; // Float!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    depatureTime: any; // DateTime!
    id: string; // String!
    isApproved: boolean; // Boolean!
    room: NexusGenRootTypes['Room']; // Room!
    updatedAt: any; // DateTime!
  }
  Mutation: { // field return type
    login: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    signup: NexusGenRootTypes['AuthPayload']; // AuthPayload!
  }
  Package: { // field return type
    app: NexusGenRootTypes['App'] | null; // App
    author: NexusGenRootTypes['User']; // User!
    books: NexusGenRootTypes['Book'][]; // [Book!]!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    description: string | null; // String
    id: string; // String!
    name: string; // String!
    price: number; // Float!
    updatedAt: any; // DateTime!
  }
  Query: { // field return type
    me: NexusGenRootTypes['User'] | null; // User
  }
  Room: { // field return type
    amenities: NexusGenRootTypes['Amenity'][]; // [Amenity!]!
    app: NexusGenRootTypes['App']; // App!
    author: NexusGenRootTypes['User']; // User!
    books: NexusGenRootTypes['Book'][]; // [Book!]!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    description: string | null; // String
    id: string; // String!
    isBooked: boolean; // Boolean!
    location: string | null; // String
    name: string; // String!
    price: number; // Float!
    updatedAt: any; // DateTime!
  }
  User: { // field return type
    amenities: NexusGenRootTypes['Amenity'][]; // [Amenity!]!
    app: NexusGenRootTypes['App']; // App!
    books: NexusGenRootTypes['Book'][]; // [Book!]!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    email: string; // String!
    id: string; // String!
    isActive: boolean; // Boolean!
    name: string; // String!
    rooms: NexusGenRootTypes['Room'][]; // [Room!]!
    updatedAt: any; // DateTime!
  }
}

export interface NexusGenArgTypes {
  Amenity: {
    rooms: { // args
      after?: NexusGenInputs['RoomWhereUniqueInput'] | null; // RoomWhereUniqueInput
      before?: NexusGenInputs['RoomWhereUniqueInput'] | null; // RoomWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  App: {
    amenities: { // args
      after?: NexusGenInputs['AmenityWhereUniqueInput'] | null; // AmenityWhereUniqueInput
      before?: NexusGenInputs['AmenityWhereUniqueInput'] | null; // AmenityWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    books: { // args
      after?: NexusGenInputs['BookWhereUniqueInput'] | null; // BookWhereUniqueInput
      before?: NexusGenInputs['BookWhereUniqueInput'] | null; // BookWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    packages: { // args
      after?: NexusGenInputs['PackageWhereUniqueInput'] | null; // PackageWhereUniqueInput
      before?: NexusGenInputs['PackageWhereUniqueInput'] | null; // PackageWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    rooms: { // args
      after?: NexusGenInputs['RoomWhereUniqueInput'] | null; // RoomWhereUniqueInput
      before?: NexusGenInputs['RoomWhereUniqueInput'] | null; // RoomWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    users: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Mutation: {
    login: { // args
      email?: string | null; // String
      password?: string | null; // String
    }
    signup: { // args
      email?: string | null; // String
      name?: string | null; // String
      password?: string | null; // String
    }
  }
  Package: {
    books: { // args
      after?: NexusGenInputs['BookWhereUniqueInput'] | null; // BookWhereUniqueInput
      before?: NexusGenInputs['BookWhereUniqueInput'] | null; // BookWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Room: {
    amenities: { // args
      after?: NexusGenInputs['AmenityWhereUniqueInput'] | null; // AmenityWhereUniqueInput
      before?: NexusGenInputs['AmenityWhereUniqueInput'] | null; // AmenityWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    books: { // args
      after?: NexusGenInputs['BookWhereUniqueInput'] | null; // BookWhereUniqueInput
      before?: NexusGenInputs['BookWhereUniqueInput'] | null; // BookWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  User: {
    amenities: { // args
      after?: NexusGenInputs['AmenityWhereUniqueInput'] | null; // AmenityWhereUniqueInput
      before?: NexusGenInputs['AmenityWhereUniqueInput'] | null; // AmenityWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    books: { // args
      after?: NexusGenInputs['BookWhereUniqueInput'] | null; // BookWhereUniqueInput
      before?: NexusGenInputs['BookWhereUniqueInput'] | null; // BookWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    rooms: { // args
      after?: NexusGenInputs['RoomWhereUniqueInput'] | null; // RoomWhereUniqueInput
      before?: NexusGenInputs['RoomWhereUniqueInput'] | null; // RoomWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Amenity" | "App" | "AuthPayload" | "Book" | "Mutation" | "Package" | "Query" | "Room" | "User";

export type NexusGenInputNames = "AmenityWhereUniqueInput" | "BookWhereUniqueInput" | "PackageWhereUniqueInput" | "RoomWhereUniqueInput" | "UserWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}